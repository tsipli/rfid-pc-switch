#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10
#define RST_PIN 9
#define POWER_PIN 2

MFRC522 mfrc522(SS_PIN, RST_PIN);  // Create MFRC522 instance

// Define the UID of the authorized RFID card
byte authorizedUID[] = {0xAA, 0xAA, 0xAA, 0xAA}; // change uid by replacing AA on this line with your card uid

void setup() {
  Serial.begin(9600);  // Initialize serial communications with the PC
  SPI.begin();         // Init SPI bus
  mfrc522.PCD_Init();  // Init MFRC522

  pinMode(POWER_PIN, OUTPUT);
  digitalWrite(POWER_PIN, HIGH); // Ensure the pin is HIGH (not pressing the button)
  
  Serial.println("Scan an authorized RFID card...");
}

void loop() {
  // Look for new cards
  if (!mfrc522.PICC_IsNewCardPresent()) {
    return;
  }

  // Select one of the cards
  if (!mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  // Check if the read UID matches the authorized UID
  if (isAuthorizedCard()) {
    Serial.println("Card accepted!");

    // Simulate pressing the power button
    digitalWrite(POWER_PIN, LOW); // Press the button
    delay(100); // Hold the button for 100 milliseconds
    digitalWrite(POWER_PIN, HIGH); // Release the button
  } else {
    Serial.println("Card not accepted.");
  }

  // Wait for 3 seconds before allowing another read
  delay(3000);
}

bool isAuthorizedCard() {
  // Compare the read UID with the authorized UID
  if (mfrc522.uid.size != sizeof(authorizedUID)) {
    return false;
  }
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    if (mfrc522.uid.uidByte[i] != authorizedUID[i]) {
      return false;
    }
  }
  return true;
}
